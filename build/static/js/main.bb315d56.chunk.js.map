{"version":3,"sources":["Team.js","App.js","reportWebVitals.js","index.js"],"names":["Team","Agenre","Bgenre","Cgenre","candidates","useState","teamA","teamB","teamC","team","setTeam","oldA","oldB","oldC","oldTeam","setOldTeam","text","state","setState","oldTeamArray","oldCandidate","setOldCandidate","compareArray","arr1","arr2","forEach","item","i","indexOf","splice","length","onClick","newCandidates","array","temporaryValue","randomIndex","currentIndex","Math","floor","random","shuffle","candiArray","slice","teamAlpha","join","teamBeta","teamChallie","valueA","valueB","valueC","console","log","App","ganres","setGanre","onChanges","e","target","value","name","onChange","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bb315d56.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nfunction Team({ Agenre, Bgenre, Cgenre }) {\n  const candidates = ['1 ', '2 ', '3 ', '4 ', '5 ', '6 ', '7 ', '8 ', '9 '];\n\n  const [team, setTeam] = useState({\n    teamA: [],\n    teamB: [],\n    teamC: [],\n  });\n  const [oldTeam, setOldTeam] = useState({\n    oldA: [],\n    oldB: [],\n    oldC: [],\n  });\n  const [state, setState] = useState({\n    text: null,\n  });\n  const [oldCandidate, setOldCandidate] = useState({\n    oldTeamArray: [],\n  });\n  const { teamA, teamB, teamC } = team;\n  const { oldA, oldB, oldC } = oldTeam;\n  const { oldTeamArray } = oldCandidate;\n  const { text } = state;\n\n  const shuffle = (array) => {\n    var currentIndex = array.length,\n      temporaryValue,\n      randomIndex;\n\n    // While there remain elements to shuffle...\n    while (0 !== currentIndex) {\n      // Pick a remaining element...\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n\n      // And swap it with the current element.\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n\n    return array;\n  };\n  const compareArray = (arr1, arr2) => {\n    // 결과값\n    var rst = false;\n\n    // arr1 배열의 크기만큼 반복\n    arr1.forEach(function (item) {\n      // arr1 배열 아이템이, arr2 배열에 있는지 확인\n      // 있으면, arr2에 item이 존재하는 index 리턴\n      // 없으면, -1 리턴\n      var i = arr2.indexOf(item);\n\n      // 존재하면, splice함수를 이용해서 arr2 배열에서 item 삭제\n      if (i > -1) arr2.splice(i, 1);\n    });\n\n    // compare2의 길이가 0이면 동일하다고 판단.\n    rst = arr2.length === 1 || 0;\n\n    return rst;\n  };\n\n  const onClick = () => {\n    const newCandidates = shuffle(candidates);\n    const candiArray = newCandidates.slice();\n    const teamA = newCandidates.splice(0, 3);\n    const teamAlpha = teamA.join(', ');\n    const teamB = newCandidates.splice(0, 3);\n    const teamBeta = teamB.join(', ');\n    const teamC = newCandidates.splice(0, 3);\n    const teamChallie = teamC.join(', ');\n    setOldCandidate({\n      oldTeamArray: candiArray,\n    });\n    setTeam({\n      teamA: teamAlpha,\n      teamB: teamBeta,\n      teamC: teamChallie,\n    });\n    const oldA = oldTeamArray.splice(0, 3);\n    const oldB = oldTeamArray.splice(0, 3);\n    const oldC = oldTeamArray.splice(0, 3);\n    setOldTeam({\n      oldA: oldA,\n      oldB: oldB,\n      oldC: oldC,\n    });\n    const valueA = compareArray(oldA, teamA);\n    const valueB = compareArray(oldB, teamB);\n    const valueC = compareArray(oldC, teamC);\n\n    if (valueA || valueB || valueC) {\n      setState({ text: '중복발생' });\n      console.log(oldA, oldB, oldC);\n      console.log('중복발생');\n    } else {\n      setState({ text: 'ㄱㅊ' });\n      console.log(oldA, oldB, oldC);\n      console.log('ㄱㅊ');\n    }\n  };\n\n  return (\n    <>\n      <div>\n        Value: {text}\n        <br />\n        <br />\n        {Agenre}팀: 임원A , {teamA} 전시즌 팀: {oldA}\n        <br />\n        <br />\n        {Bgenre}팀: 임원B , {teamB} 전시즌 팀:{oldB}\n        <br />\n        <br />\n        {Cgenre}팀: 임원C , {teamC} 전시즘 팀: {oldC}\n      </div>\n      <button onClick={onClick}>Mix</button>\n    </>\n  );\n}\n\nexport default Team;\n","import React, { useState } from 'react';\nimport Team from './Team';\n\nfunction App() {\n  const [ganres, setGanre] = useState({ Agenre: '', Bgenre: '', Cgenre: '' });\n  const { Agenre, Bgenre, Cgenre } = ganres;\n\n  const onChanges = (e) => {\n    const { value, name } = e.target;\n    setGanre({\n      ...ganres,\n      [name]: value,\n    });\n  };\n\n  return (\n    <>\n      팀A 장르 : <input name=\"Agenre\" onChange={onChanges} value={Agenre} />\n      팀B 장르 : <input name=\"Bgenre\" onChange={onChanges} value={Bgenre} />\n      팀C 장르 : <input name=\"Cgenre\" onChange={onChanges} value={Cgenre} />\n      <Team Agenre={Agenre} Bgenre={Bgenre} Cgenre={Cgenre} />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}