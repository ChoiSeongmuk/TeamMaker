{"version":3,"sources":["Team.js","App.js","reportWebVitals.js","index.js"],"names":["Team","Agenre","Bgenre","Cgenre","candidates","useState","teamA","teamB","teamC","team","setTeam","onClick","newCandidates","sort","a","b","parseInt","Math","random","teamAlpha","splice","join","teamBeta","teamChallie","App","ganres","setGanre","onChanges","e","target","value","name","onChange","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sLA8DeA,MA5Df,YAA2C,IAA3BC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,OACxBC,EAAa,CACjB,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,eACA,eACA,eACA,eACA,eACA,gBAbsC,EAgBhBC,mBAAS,CAC/BC,MAAO,GACPC,MAAO,GACPC,MAAO,KAnB+B,mBAgBjCC,EAhBiC,KAgB3BC,EAhB2B,KAsBhCJ,EAAwBG,EAAxBH,MAAOC,EAAiBE,EAAjBF,MAAOC,EAAUC,EAAVD,MAwBtB,OACE,qCACE,gCACGP,EADH,WACcK,EACZ,uBACCJ,EAHH,WAGcK,EACZ,uBACCJ,EALH,WAKcK,KAEd,wBAAQG,QAxBI,WACd,IAAMC,EAA+BR,EAPTS,MAAK,SAACC,EAAGC,GACnC,OAAOC,SAAyB,GAAhBC,KAAKC,UAAiB,KAQlCC,EADQP,EAAcQ,OAAO,EAAG,GACdC,KAAK,MAEvBC,EADQV,EAAcQ,OAAO,EAAG,GACfC,KAAK,MAEtBE,EADQX,EAAcQ,OAAO,EAAG,GACZC,KAAK,MAC/BX,EAAQ,CACNJ,MAAOa,EACPZ,MAAOe,EACPd,MAAOe,KAaP,qBChCSC,MAtBf,WAAgB,IAAD,EACcnB,mBAAS,CAAEJ,OAAQ,GAAIC,OAAQ,GAAIC,OAAQ,KADzD,mBACNsB,EADM,KACEC,EADF,KAELzB,EAA2BwB,EAA3BxB,OAAQC,EAAmBuB,EAAnBvB,OAAQC,EAAWsB,EAAXtB,OAElBwB,EAAY,SAACC,GAAO,IAAD,EACCA,EAAEC,OAAlBC,EADe,EACfA,MAAOC,EADQ,EACRA,KACfL,EAAS,2BACJD,GADG,kBAELM,EAAOD,MAIZ,OACE,+DACU,uBAAOC,KAAK,SAASC,SAAUL,EAAWG,MAAO7B,IAD3D,0BAEU,uBAAO8B,KAAK,SAASC,SAAUL,EAAWG,MAAO5B,IAF3D,0BAGU,uBAAO6B,KAAK,SAASC,SAAUL,EAAWG,MAAO3B,IACzD,cAAC,EAAD,CAAMF,OAAQA,EAAQC,OAAQA,EAAQC,OAAQA,QCRrC8B,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d5888ca4.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nfunction Team({ Agenre, Bgenre, Cgenre }) {\n  const candidates = [\n    '효인(여)',\n    '민아(여)',\n    '소영(여)',\n    '주미(여)',\n    '태연(여)',\n    '민지(여)',\n    '성묵',\n    '회영',\n    '대희',\n    '형섭',\n    '형석',\n    '기철',\n  ];\n\n  const [team, setTeam] = useState({\n    teamA: [],\n    teamB: [],\n    teamC: [],\n  });\n\n  const { teamA, teamB, teamC } = team;\n\n  const makeCandidates = (array) => {\n    const newCandidates = array.sort((a, b) => {\n      return parseInt(Math.random() * 10) - 5;\n    });\n    return newCandidates;\n  };\n\n  const onClick = () => {\n    const newCandidates = makeCandidates(candidates);\n    const teamA = newCandidates.splice(0, 4);\n    const teamAlpha = teamA.join(', ');\n    const teamB = newCandidates.splice(0, 4);\n    const teamBeta = teamB.join(', ');\n    const teamC = newCandidates.splice(0, 4);\n    const teamChallie = teamC.join(', ');\n    setTeam({\n      teamA: teamAlpha,\n      teamB: teamBeta,\n      teamC: teamChallie,\n    });\n  };\n\n  return (\n    <>\n      <div>\n        {Agenre}팀: {teamA}\n        <br />\n        {Bgenre}팀: {teamB}\n        <br />\n        {Cgenre}팀: {teamC}\n      </div>\n      <button onClick={onClick}>Mix</button>\n    </>\n  );\n}\n\nexport default Team;\n","import React, { useState } from 'react';\nimport Team from './Team';\n\nfunction App() {\n  const [ganres, setGanre] = useState({ Agenre: '', Bgenre: '', Cgenre: '' });\n  const { Agenre, Bgenre, Cgenre } = ganres;\n\n  const onChanges = (e) => {\n    const { value, name } = e.target;\n    setGanre({\n      ...ganres,\n      [name]: value,\n    });\n  };\n\n  return (\n    <>\n      팀A 장르 : <input name=\"Agenre\" onChange={onChanges} value={Agenre} />\n      팀B 장르 : <input name=\"Bgenre\" onChange={onChanges} value={Bgenre} />\n      팀C 장르 : <input name=\"Cgenre\" onChange={onChanges} value={Cgenre} />\n      <Team Agenre={Agenre} Bgenre={Bgenre} Cgenre={Cgenre} />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}