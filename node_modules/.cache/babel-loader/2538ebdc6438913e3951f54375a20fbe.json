{"ast":null,"code":"import _slicedToArray from\"/Users/seoungmuk/Desktop/TeamMaker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function Team(_ref){var Agenre=_ref.Agenre,Bgenre=_ref.Bgenre,Cgenre=_ref.Cgenre;var candidates=['1 ','2 ','3 ','4 ','5 ','6 ','7 ','8 ','9 '];var _useState=useState({teamA:[],teamB:[],teamC:[]}),_useState2=_slicedToArray(_useState,2),team=_useState2[0],setTeam=_useState2[1];var _useState3=useState({oldA:[],oldB:[],oldC:[]}),_useState4=_slicedToArray(_useState3,2),oldTeam=_useState4[0],setOldTeam=_useState4[1];var _useState5=useState({text:null}),_useState6=_slicedToArray(_useState5,2),state=_useState6[0],setState=_useState6[1];var _useState7=useState({oldTeamArray:[]}),_useState8=_slicedToArray(_useState7,2),oldCandidate=_useState8[0],setOldCandidate=_useState8[1];var oldA=oldTeam.oldA,oldB=oldTeam.oldB,oldC=oldTeam.oldC;var teamA=team.teamA,teamB=team.teamB,teamC=team.teamC;var oldTeamArray=oldCandidate.oldTeamArray;var text=state.text;useEffect(function(){console.log(text,oldA,oldB,oldC);if(text==='중복발생'){onClick();}/* eslint-disable-next-line */},[text]);var shuffle=function shuffle(array){var currentIndex=array.length,temporaryValue,randomIndex;// While there remain elements to shuffle...\nwhile(0!==currentIndex){// Pick a remaining element...\nrandomIndex=Math.floor(Math.random()*currentIndex);currentIndex-=1;// And swap it with the current element.\ntemporaryValue=array[currentIndex];array[currentIndex]=array[randomIndex];array[randomIndex]=temporaryValue;}return array;};var compareArray=function compareArray(arr1,arr2){// 결과값\nvar rst=false;// arr1 배열의 크기만큼 반복\narr1.forEach(function(item){// arr1 배열 아이템이, arr2 배열에 있는지 확인\n// 있으면, arr2에 item이 존재하는 index 리턴\n// 없으면, -1 리턴\nvar i=arr2.indexOf(item);// 존재하면, splice함수를 이용해서 arr2 배열에서 item 삭제\nif(i>-1)arr2.splice(i,1);});// compare2의 길이가 0이면 동일하다고 판단.\nrst=arr2.length===1||0;return rst;};var onClick=function onClick(){var newCandidates=shuffle(candidates);var candiArray=newCandidates.slice();var teamA=newCandidates.splice(0,3);var teamAlpha=teamA.join(', ');var teamB=newCandidates.splice(0,3);var teamBeta=teamB.join(', ');var teamC=newCandidates.splice(0,3);var teamChallie=teamC.join(', ');setOldCandidate({oldTeamArray:candiArray});setTeam({teamA:teamAlpha,teamB:teamBeta,teamC:teamChallie});var oldA=oldTeamArray.splice(0,3);var oldB=oldTeamArray.splice(0,3);var oldC=oldTeamArray.splice(0,3);setOldTeam({oldA:oldA,oldB:oldB,oldC:oldC});var valueA=compareArray(oldA,teamA);var valueB=compareArray(oldB,teamB);var valueC=compareArray(oldC,teamC);if(valueA||valueB||valueC){setState({text:'중복발생'});console.log(oldA,oldB,oldC);console.log('중복발생');}else{setState({text:'ㄱㅊ'});console.log(oldA,oldB,oldC);console.log('ㄱㅊ');}};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),Agenre,\"\\uD300: \\uC784\\uC6D0A , \",teamA,\" \\uC804\\uC2DC\\uC98C \",Agenre,\"\\uD300: \\uC784\\uC6D0A , \",oldA.join(', '),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),Bgenre,\"\\uD300: \\uC784\\uC6D0B , \",teamB,\" \\uC804\\uC2DC\\uC98C \",Bgenre,\"\\uD300: \\uC784\\uC6D0B , \",oldB.join(', '),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),Cgenre,\"\\uD300: \\uC784\\uC6D0C , \",teamC,\" \\uC804\\uC2DC\\uC98C \",Cgenre,\"\\uD300: \\uC784\\uC6D0C , \",oldC.join(', ')]}),/*#__PURE__*/_jsx(\"button\",{onClick:onClick,children:\"Mix\"})]});}export default Team;","map":{"version":3,"sources":["/Users/seoungmuk/Desktop/TeamMaker/src/Team.js"],"names":["React","useEffect","useState","Team","Agenre","Bgenre","Cgenre","candidates","teamA","teamB","teamC","team","setTeam","oldA","oldB","oldC","oldTeam","setOldTeam","text","state","setState","oldTeamArray","oldCandidate","setOldCandidate","console","log","onClick","shuffle","array","currentIndex","length","temporaryValue","randomIndex","Math","floor","random","compareArray","arr1","arr2","rst","forEach","item","i","indexOf","splice","newCandidates","candiArray","slice","teamAlpha","join","teamBeta","teamChallie","valueA","valueB","valueC"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\n\nfunction Team({ Agenre, Bgenre, Cgenre }) {\n  const candidates = ['1 ', '2 ', '3 ', '4 ', '5 ', '6 ', '7 ', '8 ', '9 '];\n\n  const [team, setTeam] = useState({\n    teamA: [],\n    teamB: [],\n    teamC: [],\n  });\n  const [oldTeam, setOldTeam] = useState({\n    oldA: [],\n    oldB: [],\n    oldC: [],\n  });\n  const [state, setState] = useState({\n    text: null,\n  });\n  const [oldCandidate, setOldCandidate] = useState({\n    oldTeamArray: [],\n  });\n\n  const { oldA, oldB, oldC } = oldTeam;\n  const { teamA, teamB, teamC } = team;\n  const { oldTeamArray } = oldCandidate;\n  const { text } = state;\n  useEffect(() => {\n    console.log(text, oldA, oldB, oldC);\n    if (text === '중복발생') {\n      onClick();\n    }\n    /* eslint-disable-next-line */\n  }, [text]);\n\n  const shuffle = (array) => {\n    var currentIndex = array.length,\n      temporaryValue,\n      randomIndex;\n\n    // While there remain elements to shuffle...\n    while (0 !== currentIndex) {\n      // Pick a remaining element...\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n\n      // And swap it with the current element.\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n\n    return array;\n  };\n  const compareArray = (arr1, arr2) => {\n    // 결과값\n    var rst = false;\n\n    // arr1 배열의 크기만큼 반복\n    arr1.forEach(function (item) {\n      // arr1 배열 아이템이, arr2 배열에 있는지 확인\n      // 있으면, arr2에 item이 존재하는 index 리턴\n      // 없으면, -1 리턴\n      var i = arr2.indexOf(item);\n\n      // 존재하면, splice함수를 이용해서 arr2 배열에서 item 삭제\n      if (i > -1) arr2.splice(i, 1);\n    });\n\n    // compare2의 길이가 0이면 동일하다고 판단.\n    rst = arr2.length === 1 || 0;\n\n    return rst;\n  };\n\n  const onClick = () => {\n    const newCandidates = shuffle(candidates);\n    const candiArray = newCandidates.slice();\n    const teamA = newCandidates.splice(0, 3);\n    const teamAlpha = teamA.join(', ');\n    const teamB = newCandidates.splice(0, 3);\n    const teamBeta = teamB.join(', ');\n    const teamC = newCandidates.splice(0, 3);\n    const teamChallie = teamC.join(', ');\n    setOldCandidate({\n      oldTeamArray: candiArray,\n    });\n    setTeam({\n      teamA: teamAlpha,\n      teamB: teamBeta,\n      teamC: teamChallie,\n    });\n    const oldA = oldTeamArray.splice(0, 3);\n    const oldB = oldTeamArray.splice(0, 3);\n    const oldC = oldTeamArray.splice(0, 3);\n    setOldTeam({\n      oldA: oldA,\n      oldB: oldB,\n      oldC: oldC,\n    });\n    const valueA = compareArray(oldA, teamA);\n    const valueB = compareArray(oldB, teamB);\n    const valueC = compareArray(oldC, teamC);\n\n    if (valueA || valueB || valueC) {\n      setState({ text: '중복발생' });\n      console.log(oldA, oldB, oldC);\n      console.log('중복발생');\n    } else {\n      setState({ text: 'ㄱㅊ' });\n      console.log(oldA, oldB, oldC);\n      console.log('ㄱㅊ');\n    }\n  };\n\n  return (\n    <>\n      <div>\n        <br />\n        <br />\n        {Agenre}팀: 임원A , {teamA} 전시즌 {Agenre}팀: 임원A , {oldA.join(', ')}\n        <br />\n        <br />\n        {Bgenre}팀: 임원B , {teamB} 전시즌 {Bgenre}팀: 임원B , {oldB.join(', ')}\n        <br />\n        <br />\n        {Cgenre}팀: 임원C , {teamC} 전시즌 {Cgenre}팀: 임원C , {oldC.join(', ')}\n      </div>\n      <button onClick={onClick}>Mix</button>\n    </>\n  );\n}\n\nexport default Team;\n"]},"metadata":{},"sourceType":"module"}