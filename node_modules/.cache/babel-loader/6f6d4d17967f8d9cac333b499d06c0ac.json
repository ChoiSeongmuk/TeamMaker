{"ast":null,"code":"var _jsxFileName = \"/Users/seoungmuk/Desktop/TeamMaker/src/Team.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Team({\n  Agenre,\n  Bgenre,\n  Cgenre\n}) {\n  _s();\n\n  const candidates = ['1 ', '2 ', '3 ', '4 ', '5 ', '6 ', '7 ', '8 ', '9 '];\n  const [team, setTeam] = useState({\n    teamA: [],\n    teamB: [],\n    teamC: []\n  });\n  const [oldCandidate, setOldCandidate] = useState({\n    oldcandidate: null\n  });\n  const {\n    teamA,\n    teamB,\n    teamC\n  } = team;\n  const array = [];\n  const oldCandidateArray = oldCandidate;\n  array.push(oldCandidateArray);\n\n  const shuffle = array => {\n    var currentIndex = array.length,\n        temporaryValue,\n        randomIndex; // While there remain elements to shuffle...\n\n    while (0 !== currentIndex) {\n      // Pick a remaining element...\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1; // And swap it with the current element.\n\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n\n    return array;\n  };\n\n  const onClick = () => {\n    const newCandidates = shuffle(candidates);\n    const candiArray = newCandidates.slice();\n    const teamA = newCandidates.splice(0, 3);\n    const teamAlpha = teamA.join(', ');\n    const teamB = newCandidates.splice(0, 3);\n    const teamBeta = teamB.join(', ');\n    const teamC = newCandidates.splice(0, 3);\n    const teamChallie = teamC.join(', ');\n    setOldCandidate({\n      oldcandidate: candiArray\n    });\n    setTeam({\n      teamA: teamAlpha,\n      teamB: teamBeta,\n      teamC: teamChallie\n    });\n    console.log(oldCandidateArray);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [Agenre, \"\\uD300: \\uC784\\uC6D0A , \", teamA, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), Bgenre, \"\\uD300: \\uC784\\uC6D0B , \", teamB, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), Cgenre, \"\\uD300: \\uC784\\uC6D0C , \", teamC]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onClick,\n      children: \"Mix\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Team, \"Yka4N6L+W9DtbWY8jgMCy/FgG7I=\");\n\n_c = Team;\nexport default Team;\n\nvar _c;\n\n$RefreshReg$(_c, \"Team\");","map":{"version":3,"sources":["/Users/seoungmuk/Desktop/TeamMaker/src/Team.js"],"names":["React","useState","Team","Agenre","Bgenre","Cgenre","candidates","team","setTeam","teamA","teamB","teamC","oldCandidate","setOldCandidate","oldcandidate","array","oldCandidateArray","push","shuffle","currentIndex","length","temporaryValue","randomIndex","Math","floor","random","onClick","newCandidates","candiArray","slice","splice","teamAlpha","join","teamBeta","teamChallie","console","log"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n\nfunction Team({ Agenre, Bgenre, Cgenre }) {\n  const candidates = ['1 ', '2 ', '3 ', '4 ', '5 ', '6 ', '7 ', '8 ', '9 '];\n\n  const [team, setTeam] = useState({\n    teamA: [],\n    teamB: [],\n    teamC: [],\n  });\n\n  const [oldCandidate, setOldCandidate] = useState({\n    oldcandidate: null,\n  });\n  const { teamA, teamB, teamC } = team;\n  const array = [];\n  const oldCandidateArray = oldCandidate;\n  array.push(oldCandidateArray);\n  const shuffle = (array) => {\n    var currentIndex = array.length,\n      temporaryValue,\n      randomIndex;\n\n    // While there remain elements to shuffle...\n    while (0 !== currentIndex) {\n      // Pick a remaining element...\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n\n      // And swap it with the current element.\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n\n    return array;\n  };\n\n  const onClick = () => {\n    const newCandidates = shuffle(candidates);\n    const candiArray = newCandidates.slice();\n    const teamA = newCandidates.splice(0, 3);\n    const teamAlpha = teamA.join(', ');\n    const teamB = newCandidates.splice(0, 3);\n    const teamBeta = teamB.join(', ');\n    const teamC = newCandidates.splice(0, 3);\n    const teamChallie = teamC.join(', ');\n    setOldCandidate({\n      oldcandidate: candiArray,\n    });\n    setTeam({\n      teamA: teamAlpha,\n      teamB: teamBeta,\n      teamC: teamChallie,\n    });\n    console.log(oldCandidateArray);\n  };\n\n  return (\n    <>\n      <div>\n        {Agenre}팀: 임원A , {teamA}\n        <br />\n        {Bgenre}팀: 임원B , {teamB}\n        <br />\n        {Cgenre}팀: 임원C , {teamC}\n      </div>\n      <button onClick={onClick}>Mix</button>\n    </>\n  );\n}\n\nexport default Team;\n"]},"metadata":{},"sourceType":"module"}