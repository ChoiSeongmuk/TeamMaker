{"ast":null,"code":"var _jsxFileName = \"/Users/seoungmuk/Desktop/TeamMaker/src/Team.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Team({\n  Agenre,\n  Bgenre,\n  Cgenre\n}) {\n  _s();\n\n  const candidates = ['1 ', '2 ', '3 ', '4 ', '5 ', '6 ', '7 ', '8 ', '9 '];\n  const [team, setTeam] = useState({\n    teamA: [],\n    teamB: [],\n    teamC: []\n  });\n  const [newTeam, setNewTeam] = useState({\n    newTeamA: [],\n    newTeamB: [],\n    newTeamC: []\n  });\n  const [oldCandidate, setOldCandidate] = useState({\n    oldTeamArray: []\n  });\n  const {\n    teamA,\n    teamB,\n    teamC\n  } = team;\n  const {\n    oldTeamArray\n  } = oldCandidate;\n\n  const shuffle = array => {\n    var currentIndex = array.length,\n        temporaryValue,\n        randomIndex; // While there remain elements to shuffle...\n\n    while (0 !== currentIndex) {\n      // Pick a remaining element...\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1; // And swap it with the current element.\n\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n\n    return array;\n  };\n\n  const compareArray = (arr1, arr2) => {\n    // 결과값\n    var rst = false; // arr1 배열의 크기만큼 반복\n\n    arr1.forEach(function (item) {\n      // arr1 배열 아이템이, arr2 배열에 있는지 확인\n      // 있으면, arr2에 item이 존재하는 index 리턴\n      // 없으면, -1 리턴\n      var i = arr2.indexOf(item); // 존재하면, splice함수를 이용해서 arr2 배열에서 item 삭제\n\n      if (i > -1) arr2.splice(i, 1);\n    }); // compare2의 길이가 0이면 동일하다고 판단.\n\n    rst = arr2.length === 1;\n    return rst;\n  };\n\n  const onClick = () => {\n    const oldA = oldTeamArray.splice(0, 3);\n    const oldB = oldTeamArray.splice(0, 3);\n    const oldC = oldTeamArray.splice(0, 3);\n    console.log(oldA, oldB, oldC);\n    const valueA = compareArray(oldA, teamA);\n    const valueB = compareArray(oldB, teamB);\n    const valueC = compareArray(oldC, teamC);\n\n    if (valueA || valueB || valueC) {\n      const newCandidates = shuffle(candidates);\n      const candiArray = newCandidates.slice();\n      const teamA = newCandidates.splice(0, 3);\n      const teamAlpha = teamA.join(', ');\n      const teamB = newCandidates.splice(0, 3);\n      const teamBeta = teamB.join(', ');\n      const teamC = newCandidates.splice(0, 3);\n      const teamChallie = teamC.join(', ');\n      setOldCandidate({\n        oldTeamArray: candiArray\n      });\n      setTeam({\n        teamA: teamAlpha,\n        teamB: teamBeta,\n        teamC: teamChallie\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [Agenre, \"\\uD300: \\uC784\\uC6D0A , \", teamA, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), Bgenre, \"\\uD300: \\uC784\\uC6D0B , \", teamB, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), Cgenre, \"\\uD300: \\uC784\\uC6D0C , \", teamC]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onClick,\n      children: \"Mix\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Team, \"Z7Uh/kNfRFgxi4QdS9Me5/Yyh9Y=\");\n\n_c = Team;\nexport default Team;\n\nvar _c;\n\n$RefreshReg$(_c, \"Team\");","map":{"version":3,"sources":["/Users/seoungmuk/Desktop/TeamMaker/src/Team.js"],"names":["React","useState","Team","Agenre","Bgenre","Cgenre","candidates","team","setTeam","teamA","teamB","teamC","newTeam","setNewTeam","newTeamA","newTeamB","newTeamC","oldCandidate","setOldCandidate","oldTeamArray","shuffle","array","currentIndex","length","temporaryValue","randomIndex","Math","floor","random","compareArray","arr1","arr2","rst","forEach","item","i","indexOf","splice","onClick","oldA","oldB","oldC","console","log","valueA","valueB","valueC","newCandidates","candiArray","slice","teamAlpha","join","teamBeta","teamChallie"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;AAEA,SAASC,IAAT,CAAc;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,MAAV;AAAkBC,EAAAA;AAAlB,CAAd,EAA0C;AAAA;;AACxC,QAAMC,UAAU,GAAG,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,IAA/B,EAAqC,IAArC,EAA2C,IAA3C,EAAiD,IAAjD,CAAnB;AAEA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC;AAC/BQ,IAAAA,KAAK,EAAE,EADwB;AAE/BC,IAAAA,KAAK,EAAE,EAFwB;AAG/BC,IAAAA,KAAK,EAAE;AAHwB,GAAD,CAAhC;AAMA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC;AACrCa,IAAAA,QAAQ,EAAE,EAD2B;AAErCC,IAAAA,QAAQ,EAAE,EAF2B;AAGrCC,IAAAA,QAAQ,EAAE;AAH2B,GAAD,CAAtC;AAKA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCjB,QAAQ,CAAC;AAC/CkB,IAAAA,YAAY,EAAE;AADiC,GAAD,CAAhD;AAGA,QAAM;AAAEV,IAAAA,KAAF;AAASC,IAAAA,KAAT;AAAgBC,IAAAA;AAAhB,MAA0BJ,IAAhC;AACA,QAAM;AAAEY,IAAAA;AAAF,MAAmBF,YAAzB;;AACA,QAAMG,OAAO,GAAIC,KAAD,IAAW;AACzB,QAAIC,YAAY,GAAGD,KAAK,CAACE,MAAzB;AAAA,QACEC,cADF;AAAA,QAEEC,WAFF,CADyB,CAKzB;;AACA,WAAO,MAAMH,YAAb,EAA2B;AACzB;AACAG,MAAAA,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBN,YAA3B,CAAd;AACAA,MAAAA,YAAY,IAAI,CAAhB,CAHyB,CAKzB;;AACAE,MAAAA,cAAc,GAAGH,KAAK,CAACC,YAAD,CAAtB;AACAD,MAAAA,KAAK,CAACC,YAAD,CAAL,GAAsBD,KAAK,CAACI,WAAD,CAA3B;AACAJ,MAAAA,KAAK,CAACI,WAAD,CAAL,GAAqBD,cAArB;AACD;;AAED,WAAOH,KAAP;AACD,GAlBD;;AAmBA,QAAMQ,YAAY,GAAG,CAACC,IAAD,EAAOC,IAAP,KAAgB;AACnC;AACA,QAAIC,GAAG,GAAG,KAAV,CAFmC,CAInC;;AACAF,IAAAA,IAAI,CAACG,OAAL,CAAa,UAAUC,IAAV,EAAgB;AAC3B;AACA;AACA;AACA,UAAIC,CAAC,GAAGJ,IAAI,CAACK,OAAL,CAAaF,IAAb,CAAR,CAJ2B,CAM3B;;AACA,UAAIC,CAAC,GAAG,CAAC,CAAT,EAAYJ,IAAI,CAACM,MAAL,CAAYF,CAAZ,EAAe,CAAf;AACb,KARD,EALmC,CAenC;;AACAH,IAAAA,GAAG,GAAGD,IAAI,CAACR,MAAL,KAAgB,CAAtB;AAEA,WAAOS,GAAP;AACD,GAnBD;;AAqBA,QAAMM,OAAO,GAAG,MAAM;AACpB,UAAMC,IAAI,GAAGpB,YAAY,CAACkB,MAAb,CAAoB,CAApB,EAAuB,CAAvB,CAAb;AACA,UAAMG,IAAI,GAAGrB,YAAY,CAACkB,MAAb,CAAoB,CAApB,EAAuB,CAAvB,CAAb;AACA,UAAMI,IAAI,GAAGtB,YAAY,CAACkB,MAAb,CAAoB,CAApB,EAAuB,CAAvB,CAAb;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ,EAAkBC,IAAlB,EAAwBC,IAAxB;AACA,UAAMG,MAAM,GAAGf,YAAY,CAACU,IAAD,EAAO9B,KAAP,CAA3B;AACA,UAAMoC,MAAM,GAAGhB,YAAY,CAACW,IAAD,EAAO9B,KAAP,CAA3B;AACA,UAAMoC,MAAM,GAAGjB,YAAY,CAACY,IAAD,EAAO9B,KAAP,CAA3B;;AAEA,QAAIiC,MAAM,IAAIC,MAAV,IAAoBC,MAAxB,EAAgC;AAC9B,YAAMC,aAAa,GAAG3B,OAAO,CAACd,UAAD,CAA7B;AACA,YAAM0C,UAAU,GAAGD,aAAa,CAACE,KAAd,EAAnB;AACA,YAAMxC,KAAK,GAAGsC,aAAa,CAACV,MAAd,CAAqB,CAArB,EAAwB,CAAxB,CAAd;AACA,YAAMa,SAAS,GAAGzC,KAAK,CAAC0C,IAAN,CAAW,IAAX,CAAlB;AACA,YAAMzC,KAAK,GAAGqC,aAAa,CAACV,MAAd,CAAqB,CAArB,EAAwB,CAAxB,CAAd;AACA,YAAMe,QAAQ,GAAG1C,KAAK,CAACyC,IAAN,CAAW,IAAX,CAAjB;AACA,YAAMxC,KAAK,GAAGoC,aAAa,CAACV,MAAd,CAAqB,CAArB,EAAwB,CAAxB,CAAd;AACA,YAAMgB,WAAW,GAAG1C,KAAK,CAACwC,IAAN,CAAW,IAAX,CAApB;AACAjC,MAAAA,eAAe,CAAC;AACdC,QAAAA,YAAY,EAAE6B;AADA,OAAD,CAAf;AAGAxC,MAAAA,OAAO,CAAC;AACNC,QAAAA,KAAK,EAAEyC,SADD;AAENxC,QAAAA,KAAK,EAAE0C,QAFD;AAGNzC,QAAAA,KAAK,EAAE0C;AAHD,OAAD,CAAP;AAKD;AACF,GA3BD;;AA6BA,sBACE;AAAA,4BACE;AAAA,iBACGlD,MADH,8BACoBM,KADpB,eAEE;AAAA;AAAA;AAAA;AAAA,cAFF,EAGGL,MAHH,8BAGoBM,KAHpB,eAIE;AAAA;AAAA;AAAA;AAAA,cAJF,EAKGL,MALH,8BAKoBM,KALpB;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAQE;AAAQ,MAAA,OAAO,EAAE2B,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARF;AAAA,kBADF;AAYD;;GApGQpC,I;;KAAAA,I;AAsGT,eAAeA,IAAf","sourcesContent":["import React, { useState } from 'react';\n\nfunction Team({ Agenre, Bgenre, Cgenre }) {\n  const candidates = ['1 ', '2 ', '3 ', '4 ', '5 ', '6 ', '7 ', '8 ', '9 '];\n\n  const [team, setTeam] = useState({\n    teamA: [],\n    teamB: [],\n    teamC: [],\n  });\n\n  const [newTeam, setNewTeam] = useState({\n    newTeamA: [],\n    newTeamB: [],\n    newTeamC: [],\n  });\n  const [oldCandidate, setOldCandidate] = useState({\n    oldTeamArray: [],\n  });\n  const { teamA, teamB, teamC } = team;\n  const { oldTeamArray } = oldCandidate;\n  const shuffle = (array) => {\n    var currentIndex = array.length,\n      temporaryValue,\n      randomIndex;\n\n    // While there remain elements to shuffle...\n    while (0 !== currentIndex) {\n      // Pick a remaining element...\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n\n      // And swap it with the current element.\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n\n    return array;\n  };\n  const compareArray = (arr1, arr2) => {\n    // 결과값\n    var rst = false;\n\n    // arr1 배열의 크기만큼 반복\n    arr1.forEach(function (item) {\n      // arr1 배열 아이템이, arr2 배열에 있는지 확인\n      // 있으면, arr2에 item이 존재하는 index 리턴\n      // 없으면, -1 리턴\n      var i = arr2.indexOf(item);\n\n      // 존재하면, splice함수를 이용해서 arr2 배열에서 item 삭제\n      if (i > -1) arr2.splice(i, 1);\n    });\n\n    // compare2의 길이가 0이면 동일하다고 판단.\n    rst = arr2.length === 1;\n\n    return rst;\n  };\n\n  const onClick = () => {\n    const oldA = oldTeamArray.splice(0, 3);\n    const oldB = oldTeamArray.splice(0, 3);\n    const oldC = oldTeamArray.splice(0, 3);\n    console.log(oldA, oldB, oldC);\n    const valueA = compareArray(oldA, teamA);\n    const valueB = compareArray(oldB, teamB);\n    const valueC = compareArray(oldC, teamC);\n\n    if (valueA || valueB || valueC) {\n      const newCandidates = shuffle(candidates);\n      const candiArray = newCandidates.slice();\n      const teamA = newCandidates.splice(0, 3);\n      const teamAlpha = teamA.join(', ');\n      const teamB = newCandidates.splice(0, 3);\n      const teamBeta = teamB.join(', ');\n      const teamC = newCandidates.splice(0, 3);\n      const teamChallie = teamC.join(', ');\n      setOldCandidate({\n        oldTeamArray: candiArray,\n      });\n      setTeam({\n        teamA: teamAlpha,\n        teamB: teamBeta,\n        teamC: teamChallie,\n      });\n    }\n  };\n\n  return (\n    <>\n      <div>\n        {Agenre}팀: 임원A , {teamA}\n        <br />\n        {Bgenre}팀: 임원B , {teamB}\n        <br />\n        {Cgenre}팀: 임원C , {teamC}\n      </div>\n      <button onClick={onClick}>Mix</button>\n    </>\n  );\n}\n\nexport default Team;\n"]},"metadata":{},"sourceType":"module"}